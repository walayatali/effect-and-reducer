{"ast":null,"code":"var _jsxFileName = \"/home/syed/reactProjects/training/xprolabs/effect-and-reducer/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'EMAIL_INPUT') {\n    return {\n      value: action.payload,\n      isValid: action.paylaod.includes('@')\n    };\n  }\n\n  if (action.type === 'EMAIL_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'PASSWORD_INPUT') {\n    return {\n      value: action.payload,\n      isValid: action.paylaod.trim().length > 6\n    };\n  }\n\n  if (action.type === 'PASSWORD_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const {\n    isValid: emailValid\n  } = emailState;\n  const {\n    isValid: passwordValid\n  } = passwordState;\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailValid && passwordValid.trim().length > 6);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailValid, passwordValid]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'EMAIL_INPUT',\n      payload: event.target.value\n    }); // setEnteredEmail(event.target.value);\n    // setFormIsValid(\n    //   event.target.value.includes('@') && enteredPassword.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'PASSWORD_INPUT',\n      payload: event.target.value\n    }); // setEnteredPassword(event.target.value);\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'EMAIL_BLUR'\n    }); // setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'PASSWORD_BLUR'\n    }); // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.IsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.IsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"qp+E7eOeLtyq7eDZc1t6BXLJ5j4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/syed/reactProjects/training/xprolabs/effect-and-reducer/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","payload","isValid","paylaod","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailValid","passwordValid","timer","setTimeout","console","log","clearTimeout","identifier","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","IsValid","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst  emailReducer = (state, action) => {\n    if (action.type === 'EMAIL_INPUT'){\n        return {value: action.payload, isValid: action.paylaod.includes('@')}\n    }\n    if (action.type === 'EMAIL_BLUR'){\n        return {value: state.value, isValid: state.value.includes('@')}\n    }\n    return {value: '', isValid: false};\n}\nconst  passwordReducer = (state, action) => {\n    if (action.type === 'PASSWORD_INPUT'){\n        return {value: action.payload, isValid: action.paylaod.trim().length > 6}\n    }\n    if (action.type === 'PASSWORD_BLUR'){\n        return {value: state.value, isValid: state.value.trim().length > 6}\n    }\n    return {value: '', isValid: false};\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {value: '', isValid: null});\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {value: '', isValid: null});\n\n  const { isValid: emailValid } = emailState;\n  const { isValid: passwordValid } = passwordState;\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n        console.log('Checking form validity!');\n        setFormIsValid(\n            emailValid && passwordValid.trim().length > 6\n        );\n    }, 500); \n    \n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  },[emailValid, passwordValid]);\n\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type:'EMAIL_INPUT', payload: event.target.value })\n    // setEnteredEmail(event.target.value);\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && enteredPassword.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type:'PASSWORD_INPUT', payload: event.target.value })\n\n    // setEnteredPassword(event.target.value);\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'EMAIL_BLUR'})\n    // setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'PASSWORD_BLUR'})\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.IsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.IsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}